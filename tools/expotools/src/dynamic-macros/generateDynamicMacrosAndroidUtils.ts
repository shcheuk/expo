
function formatJavaType(value) {
  if (value == null) {
    return 'String';
  } else if (typeof value === 'string') {
    return 'String';
  } else if (typeof value === 'number') {
    return 'int';
  }
  throw new Error(`Unsupported literal value: ${value}`);
}

function formatJavaLiteral(value) {
  if (value == null) {
    return 'null';
  } else if (typeof value === 'string') {
    value = value.replace(/"/g, '\\"');
    return `"${value}"`;
  } else if (typeof value === 'number') {
    return value;
  }
  throw new Error(`Unsupported literal value: ${value}`);
}

export async function generateAndroidBuildConstantsFromMacrosAsync(macros) {
  let source;

  // android falls back to published dev home if local dev home
  // doesn't exist or had an error.
  const isLocalManifestEmpty = !macros.BUILD_MACHINE_KERNEL_MANIFEST || macros.BUILD_MACHINE_KERNEL_MANIFEST === '';

  if (isLocalManifestEmpty) {
    macros.BUILD_MACHINE_KERNEL_MANIFEST = macros.DEV_PUBLISHED_KERNEL_MANIFEST;
    console.log('\n\nUsing published dev version of Expo Home\n\n');
  } else {
    console.log('\n\nUsing Expo Home from your local master branch\n\n');
  }

  delete macros['DEV_PUBLISHED_KERNEL_MANIFEST'];

  const definitions = Object.entries(macros).map(([name, value]) =>
    `  public static final ${formatJavaType(value)} ${name} = ${formatJavaLiteral(value)};`
  );

  source = `
package host.exp.exponent.generated;

public class ExponentBuildConstants {
${definitions.join('\n')}
}`;

  return (
    `
// Copyright 2016-present 650 Industries. All rights reserved.
// @generated by \`expotools android-generate-dynamic-macros\`

${source.trim()}
`.trim() + '\n'
  );
}
